# author : "Xavier Chopin"
# copyright : "Copyright 2018, University of Lorraine"
# license : "ECL-2.0"
# version : "1.0.0"
# email : "xavier.chopin@univ-lorraine.fr"
# status : "Production"

input {
  stdin { }
}

filter {
  grok {
    match => ["message", "\[%{DATA:requestdate}\] \[IP:%{IPORHOST:clientip}\] \[ID:%{NOTSPACE:ldap_uid}\] \[TICKET:%{NOTSPACE}\] \[SERVICE:%{GREEDYDATA:[request]}\] \["]
  }
  grok {
    match => ["message", "\[%{DATA}\] \[IP:%{IPORHOST}\] \[ID:%{NOTSPACE}\] \[TICKET:%{NOTSPACE}\] \[SERVICE:%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST:[request_host]})?(?:%{URIPATH}(?:%{URIPARAM})?)?\]"]
  }

  if "_grokparsefailure" not in [tags] {
    if [ldap_uid] !~ /.*u$/ {
      drop{} # continue if it's not a student
    }

    mutate {
      gsub => [
        "requestdate", "CEST", "+0200",
        "requestdate", "CET", "+0100"
      ]
    }

    date {
      match => ["requestdate", "EEE MMM dd HH:mm:ss Z yyyy"]
      locale => "en"
      timezone => "Europe/Paris"
    }

    mutate {
        remove_field => ["requestdate", "clientip", "host", "message", "@version"]
    }
  }

  ruby {
    code => "
        require 'base64';
        file = File.join(File.dirname(__FILE__), '../../bootstrap/settings.yml')
        settings = YAML.load_file(file)['api']
        event['endpoint'] = settings['uri'] + '/xAPI/statements'
        event['credentials'] = Base64.strict_encode64(settings['username'] + ':' + settings['password'])
        "
  }
}

output {
    http {
        http_method => "post"
        url => "%{endpoint}"
        format => "message"
        headers => {
          "Authorization" => "Basic %{credentials}"
          "X-Experience-API-Version" => "1.0.0"
        }
        content_type => "application/json"
        message => '
        {
        "actor": {
          "objectType": "Agent",
          "account": {
            "name": "%{ldap_uid}"
          }
        },
        "verb": {
         "id": "https://brindlewaye.com/xAPITerms/verbs/loggedin/",
          "display": {
            "en-US": "Logged in",
            "fr-FR": "Connexion"
          }
        },
        "timestamp": "%{@timestamp}",
        "object": {
          "objectType": "Activity",
          "id": "%{request}",
          "name": "%{request_host}",
          "definition": {
            "type": "%{request_host}"
          }
        }
      }'
    }
}
